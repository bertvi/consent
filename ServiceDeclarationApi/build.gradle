plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id 'java'
}

group = 'com.gofore'
version = "${version}"
sourceCompatibility = '11'

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	compile "com.h2database:h2:${h2DatabaseVersion}"
	compile "org.postgresql:postgresql:${postgreSqlVersion}"
	compile "junit:junit:${jUnitVersion}"
	compile "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
	compile "ch.qos.logback:logback-classic:${logBackVersion}"
	compile "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	testCompile "junit:junit:${jUnitVersion}"
	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: 'org.junit.vintage', module:'junit-vintage-engine'
	}
}

processResources {
	filesMatching("**/application.properties") {
		expand( project.properties )
	}
}

test {
	useJUnitPlatform()
	reports {
		junitXml.enabled = true
		html.enabled = true
	}
}